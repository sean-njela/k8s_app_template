# Lint, test, Docker build, Helm lint
name: CI-Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read            # linting
  packages: write           # push to ghcr.io
  id-token: write           # OIDC auth to GCP Artifact Registry (optional)

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node / Go / Python (example)
        uses: actions/setup-node@v4 # replace with your language
        with:
          node-version: 20

      - name: Install deps & run tests # replace with your language
        run: |
          npm ci 
          npm test --if-present

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract image tag
        id: vars
        run: echo "sha_short=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

      - name: Build & push multiâ€‘arch image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name == 'push' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }}
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@v0.19.0
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }}
          severity: CRITICAL,HIGH

      - name: Create image tag file
        run: echo "${{ steps.vars.outputs.sha_short }}" > image-tag.txt

      - name: Upload image tag artifact (for deploy job)
        uses: actions/upload-artifact@v4
        with:
          name: image-tag
          path: ./image-tag.txt